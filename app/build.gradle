plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs"
    id 'com.google.dagger.hilt.android'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'com.google.devtools.ksp'
    id("com.google.firebase.crashlytics")
}

android {
    namespace 'com.koleff.kare_android'
    compileSdk 34

    defaultConfig {
        applicationId "com.koleff.kare_android"
        minSdk 24
        targetSdk 34
        versionCode 12
        versionName "2.3"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary true
        }

        //Room DB schema location
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        //Enable tests.
        testOptions {
            unitTests.all {
                useJUnitPlatform()
            }

            unitTests.returnDefaultValues = true
            unitTests.includeAndroidResources = true
        }

        //Share mutual test resources - worked pre chipmunk IDE
//        sourceSets {
//            String sharedTestDir = 'src/sharedTest/java'
//            test {
//                java.srcDir sharedTestDir
//            }
//            androidTest {
//                java.srcDir sharedTestDir
//            }
//        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            firebaseCrashlytics {
                //Enable processing and uploading of native symbols to Firebase servers.
                //By default, this is disabled to improve build speeds.
                //This flag must be enabled to see properly-symbolicated native
                //stack traces in the Crashlytics dashboard.
                nativeSymbolUploadEnabled true
                strippedNativeLibsDir 'build/intermediates/stripped_native_libs/release/out/lib'
                unstrippedNativeLibsDir 'build/intermediates/merged_native_libs/release/out/lib'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding true
        buildConfig true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
}

kapt {
    correctErrorTypes true
}

//Legacy way of enabling unit tests...
//tasks.withType(Test).configureEach {
//    useJUnitPlatform()
//}

//Legacy way of sharing mutual test resources
//tasks.withType(Test).configureEach {
//    android.sourceSets.main.res.srcDirs += 'src/test-common/res'
//}

dependencies {

    //AndroidX
    implementation "androidx.core:core-ktx:$androidx_core_version"
    implementation "androidx.activity:activity-compose:$compose_activity_version"
    implementation "androidx.biometric:biometric:$androidx_biometric_version"
    implementation "androidx.core:core-splashscreen:$androidx_core_splash_screen_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"

    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_lifecycle_version"
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidx_lifecycle_version"
//    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$androidx_lifecycle_version"

    //KotlinX / Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx3:$coroutine_version"

    //MultiDex application
    implementation "androidx.multidex:multidex:$multidex_version"

    //Jetpack Compose
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-graphics:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation "androidx.compose.ui:ui-text-google-fonts:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
    implementation "androidx.compose.material3:material3:$compose_material3_version"
    implementation "androidx.compose.material:material:$compose_material_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_material_version"

    //Pull to refresh
    implementation "com.google.accompanist:accompanist-swiperefresh:$google_accompanist_version"

    //Dagger Hilt
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt_version"

    //Retrofit 2
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit2_coroutines_adapter_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"

    //OkHttp 3
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"

    //JSON
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    //Gson (Json converter)
    implementation "com.google.code.gson:gson:$gson_version"

    //Jackson
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"

    //Navigation
    implementation "androidx.navigation:navigation-runtime-ktx:$compose_navigation_version"
    implementation "androidx.navigation:navigation-compose:$compose_navigation_version"
    implementation "androidx.hilt:hilt-navigation-compose:$compose_hilt_version"

    //Room
    implementation "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-rxjava3:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    //YouTube player
    implementation "com.pierfrancescosoffritti.androidyoutubeplayer:core:$youtube_video_player_version"

    //GMS
    implementation "com.google.firebase:firebase-analytics:$firebase_analytics_version"
    implementation "com.google.firebase:firebase-messaging-ktx:$firebase_cloud_messaging_version"

    //Firebase Crashlytics
    implementation("com.google.firebase:firebase-crashlytics-ndk:$firebase_crashlytics_version")

    //Media3 Video player
    implementation "androidx.media3:media3-exoplayer:$media3_version"
    implementation "androidx.media3:media3-exoplayer-dash:$media3_version"
    implementation "androidx.media3:media3-ui:$media3_version"

    //JUnit 4
//    testImplementation "junit:junit:$robolectric_junit_version"
//    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
//    testImplementation ("org.junit.platform:junit-platform-runner:$junit_jupiter_platform_version")

    //AndroidX Testing
    androidTestImplementation "androidx.test:core:$test_core_version"
    androidTestImplementation "androidx.test:core-ktx:$test_core_version"
    androidTestImplementation "androidx.test.ext:junit:$test_junit_ext_version"
    androidTestImplementation "androidx.test.ext:junit-ktx:$test_junit_ext_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"

    //Coroutine Testing
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"

    //JUnit 5
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version")

    androidTestImplementation "org.junit.jupiter:junit-jupiter:$junit_jupiter_version"
    androidTestImplementation project(':app')

    //Shared mutual test resources
    testImplementation(project(":shared-test"))
    androidTestImplementation(project(":shared-test"))

    //JUnit platform
    testImplementation ("org.junit.platform:junit-platform-suite-api:$junit_jupiter_platform_version")

    //Mockk - Mocking
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    testImplementation "io.mockk:mockk:$mockk_version"

    //Espresso - UI tests
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    //Turbine - Flow testing
    testImplementation "app.cash.turbine:turbine:$turbine_version"
    androidTestImplementation "app.cash.turbine:turbine:$turbine_version"

    //BOMs
    implementation platform("org.jetbrains.kotlin:kotlin-bom:$kotlin_bom_version")
    androidTestImplementation platform("androidx.compose:compose-bom:$compose_bom_version")
    implementation platform("androidx.compose:compose-bom:$compose_bom_version")
    implementation platform("com.google.firebase:firebase-bom:$firebase_bom_version")
}
